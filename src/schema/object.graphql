type Object {
  id: ID!
  name: String
  tabs: [ObjectTabs]
  tasks(tab: TaskTabEnum): [Task]
  parentId: String
  address: ObjectAdress
  parent: ParentNode
  constructionType: ConstructionType 
}

type ObjectAdress {
  center: [String]
}
type ObjectTabs {
  id: ID
  name: String
}

input ObjectAddressInput {
  center: [String]
}

input ObjectInput {
  name: String!
  areaId: ID!
  address: ObjectAddressInput!
  constructionTypeId: ID!
}

input ObjectUpdateInput {
  name: String
  constructionTypeId: ID 
}

type ObjectMutations {
  create(object: ObjectInput): Object
  update(object: ObjectUpdateInput): Boolean
  delete: Boolean
}

enum PARENT_TYPE {
  AddressObject
  Area
  Object
}

type ParentNode {
  id: ID
  type: PARENT_TYPE
}

type Query {
  object(id: ID): Object
  objects: [Object]
}

type Mutation {
  createObject(object: ObjectInput): Object @deprecated
  updateObject(id: ID!, object: ObjectInput): Boolean @deprecated
  deleteObject(id: ID!): Boolean @deprecated

  object(id: ID): ObjectMutations
}

