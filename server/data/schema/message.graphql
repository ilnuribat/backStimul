type Message {
  id: ID!
  text: String
  createdAt: String
  from: User
  to: Group
  userId: String
}

type MessageConnection {
  edges: [MessageEdge]!
  pageInfo: PageInfo!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type MessageEdge {
  node: Message!
  cursor: String!
}

input MessageInput {
  groupId: String!
  text: String!
}

type Query {
  messages(groupId: String!): [Message]
  message(id: ID!): Message
}

type Mutation {
  createMessage(message: MessageInput): Message
  messageRead(id: ID!): Boolean
}

type Subscription {
  messageAdded(groupId: String!): Message
}