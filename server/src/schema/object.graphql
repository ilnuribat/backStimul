type Object {
  id: ID!
  name: String
  tasks: [Task]
  parentId: String
  address: ObjectAdress
  parent: ParentNode
}

type ObjectAdress {
  center: [String]
}

input ObjectAddressInput {
  center: [String]
}

input ObjectInput {
  name: String
  areaId: ID
  address: ObjectAddressInput
}

type ObjectMutations {
  create(object: ObjectInput): Object
  update(object: ObjectInput): Boolean
  delete: Boolean
}

enum PARENT_TYPE {
  ADDRESS
  AREA
  OBJECT
}

type ParentNode {
  id: ID!
  type: PARENT_TYPE
}

type Query {
  object(id: ID): Object
  objects: [Object]
}

type Mutation {
  createObject(object: ObjectInput): Object @deprecated
  updateObject(id: ID!, object: ObjectInput): Boolean @deprecated
  deleteObject(id: ID!): Boolean @deprecated

  object(id: ID): ObjectMutations
}

