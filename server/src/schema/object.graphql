type AddressObject {
  id: ID
  name: String
}

type Crumbs {
  id: ID
  name: String
}

type rootObject {
  id: ID
  name: String
  parentId: ID
  addresses: [AddressObject]
  objects: [Object]
  crumbs: [Crumbs]
}

type Address {
	geoLat: String @deprecated
	geoLon: String @deprecated
	value: String
  coordinates: [String]
}

input ObjectInput {
  name: String
  address: String
}

type Object {
  id: ID!
  name: String
  address: Address
  tasks: [Task]
  parentId: String
}

type ObjectMutations {
  create(object: ObjectInput): Object
  update(object: ObjectInput): Boolean
  delete: Boolean
}

type Query {
  rootObject(id: ID): rootObject
  object(id: ID): Object
  objects: [Object]
}

type Mutation {
  createObject(object: ObjectInput): Object
  updateObject(id: ID!, object: ObjectInput): Boolean
  deleteObject(id: ID!): Boolean
  object(id: ID!): ObjectMutations
}