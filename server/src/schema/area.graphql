type Area {
  id: ID!
  name: String
  address: Address
  objects: [Object]
}

input AreaInput {
  name: String!
  address: AreaAddressInput!
}

input AreaUpdateInput {
  name: String!
}

input AreaAddressInput {
  value: String!
  center: [String]!
  northEast: [String]
  southWest: [String]
}

type AddressObject {
  id: ID
  name: String
}

type Crumbs {
  id: ID
  name: String
}

type rootObject {
  id: ID
  name: String
  parentId: ID
  addresses: [AddressObject]
  areas: [Area]
  crumbs: [Crumbs]
}

type Address {
	value: String!
  center: [String]!
  northEast: [String]
  southWest: [String]
}

type AreaMutation {
  create(area: AreaInput): Area
  update(area: AreaUpdateInput): Boolean
  delete: Boolean
}

type Query {
  rootObject(id: ID): rootObject
  area(id: ID!): Area
  areas: [Area]
}

type Mutation {
  area(id: ID): AreaMutation
}
